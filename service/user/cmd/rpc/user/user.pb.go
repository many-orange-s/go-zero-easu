// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package user

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserId struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserId) Reset()         { *m = UserId{} }
func (m *UserId) String() string { return proto.CompactTextString(m) }
func (*UserId) ProtoMessage()    {}
func (*UserId) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *UserId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserId.Unmarshal(m, b)
}
func (m *UserId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserId.Marshal(b, m, deterministic)
}
func (m *UserId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserId.Merge(m, src)
}
func (m *UserId) XXX_Size() int {
	return xxx_messageInfo_UserId.Size(m)
}
func (m *UserId) XXX_DiscardUnknown() {
	xxx_messageInfo_UserId.DiscardUnknown(m)
}

var xxx_messageInfo_UserId proto.InternalMessageInfo

func (m *UserId) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type UserMsg struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Gender               string   `protobuf:"bytes,3,opt,name=Gender,proto3" json:"Gender,omitempty"`
	Phone                string   `protobuf:"bytes,4,opt,name=Phone,proto3" json:"Phone,omitempty"`
	Address              string   `protobuf:"bytes,5,opt,name=Address,proto3" json:"Address,omitempty"`
	Email                string   `protobuf:"bytes,6,opt,name=Email,proto3" json:"Email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserMsg) Reset()         { *m = UserMsg{} }
func (m *UserMsg) String() string { return proto.CompactTextString(m) }
func (*UserMsg) ProtoMessage()    {}
func (*UserMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *UserMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserMsg.Unmarshal(m, b)
}
func (m *UserMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserMsg.Marshal(b, m, deterministic)
}
func (m *UserMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserMsg.Merge(m, src)
}
func (m *UserMsg) XXX_Size() int {
	return xxx_messageInfo_UserMsg.Size(m)
}
func (m *UserMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_UserMsg.DiscardUnknown(m)
}

var xxx_messageInfo_UserMsg proto.InternalMessageInfo

func (m *UserMsg) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *UserMsg) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserMsg) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *UserMsg) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *UserMsg) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *UserMsg) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func init() {
	proto.RegisterType((*UserId)(nil), "user.UserId")
	proto.RegisterType((*UserMsg)(nil), "user.UserMsg")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 202 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x2d, 0x4e, 0x2d,
	0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0xa4, 0xb8, 0xd8, 0x42, 0x8b,
	0x53, 0x8b, 0x3c, 0x53, 0x84, 0x04, 0xb8, 0x98, 0x43, 0x33, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35,
	0x98, 0x83, 0x40, 0x4c, 0xa5, 0x5e, 0x46, 0x2e, 0x76, 0x90, 0xa4, 0x6f, 0x71, 0x3a, 0xa6, 0xac,
	0x90, 0x10, 0x17, 0x8b, 0x5f, 0x62, 0x6e, 0xaa, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x98,
	0x2d, 0x24, 0xc6, 0xc5, 0xe6, 0x9e, 0x9a, 0x97, 0x92, 0x5a, 0x24, 0xc1, 0x0c, 0x16, 0x85, 0xf2,
	0x84, 0x44, 0xb8, 0x58, 0x03, 0x32, 0xf2, 0xf3, 0x52, 0x25, 0x58, 0xc0, 0xc2, 0x10, 0x8e, 0x90,
	0x04, 0x17, 0xbb, 0x63, 0x4a, 0x4a, 0x51, 0x6a, 0x71, 0xb1, 0x04, 0x2b, 0x58, 0x1c, 0xc6, 0x05,
	0xa9, 0x77, 0xcd, 0x4d, 0xcc, 0xcc, 0x91, 0x60, 0x83, 0xa8, 0x07, 0x73, 0x8c, 0x52, 0xb8, 0xc0,
	0x6e, 0x16, 0xd2, 0xe4, 0xe2, 0x72, 0x4f, 0x2d, 0x81, 0xb9, 0x8c, 0x47, 0x0f, 0xec, 0x29, 0x88,
	0x2f, 0xa4, 0x78, 0x11, 0x3c, 0x90, 0xa4, 0x21, 0x17, 0x9f, 0x7b, 0x6a, 0x49, 0x70, 0x7e, 0x6e,
	0x2a, 0x31, 0xca, 0x35, 0x18, 0x0d, 0x18, 0x93, 0xd8, 0xc0, 0xc1, 0x63, 0x0c, 0x08, 0x00, 0x00,
	0xff, 0xff, 0xe0, 0xe4, 0x26, 0xdc, 0x2c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserClient is the client API for User service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserClient interface {
	GetUserMsg(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*UserMsg, error)
	GetSomeUserMsg(ctx context.Context, opts ...grpc.CallOption) (User_GetSomeUserMsgClient, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) GetUserMsg(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*UserMsg, error) {
	out := new(UserMsg)
	err := c.cc.Invoke(ctx, "/user.user/GetUserMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) GetSomeUserMsg(ctx context.Context, opts ...grpc.CallOption) (User_GetSomeUserMsgClient, error) {
	stream, err := c.cc.NewStream(ctx, &_User_serviceDesc.Streams[0], "/user.user/GetSomeUserMsg", opts...)
	if err != nil {
		return nil, err
	}
	x := &userGetSomeUserMsgClient{stream}
	return x, nil
}

type User_GetSomeUserMsgClient interface {
	Send(*UserId) error
	Recv() (*UserMsg, error)
	grpc.ClientStream
}

type userGetSomeUserMsgClient struct {
	grpc.ClientStream
}

func (x *userGetSomeUserMsgClient) Send(m *UserId) error {
	return x.ClientStream.SendMsg(m)
}

func (x *userGetSomeUserMsgClient) Recv() (*UserMsg, error) {
	m := new(UserMsg)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// UserServer is the server API for User service.
type UserServer interface {
	GetUserMsg(context.Context, *UserId) (*UserMsg, error)
	GetSomeUserMsg(User_GetSomeUserMsgServer) error
}

// UnimplementedUserServer can be embedded to have forward compatible implementations.
type UnimplementedUserServer struct {
}

func (*UnimplementedUserServer) GetUserMsg(ctx context.Context, req *UserId) (*UserMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserMsg not implemented")
}
func (*UnimplementedUserServer) GetSomeUserMsg(srv User_GetSomeUserMsgServer) error {
	return status.Errorf(codes.Unimplemented, "method GetSomeUserMsg not implemented")
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_GetUserMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetUserMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.user/GetUserMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetUserMsg(ctx, req.(*UserId))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_GetSomeUserMsg_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(UserServer).GetSomeUserMsg(&userGetSomeUserMsgServer{stream})
}

type User_GetSomeUserMsgServer interface {
	Send(*UserMsg) error
	Recv() (*UserId, error)
	grpc.ServerStream
}

type userGetSomeUserMsgServer struct {
	grpc.ServerStream
}

func (x *userGetSomeUserMsgServer) Send(m *UserMsg) error {
	return x.ServerStream.SendMsg(m)
}

func (x *userGetSomeUserMsgServer) Recv() (*UserId, error) {
	m := new(UserId)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.user",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserMsg",
			Handler:    _User_GetUserMsg_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetSomeUserMsg",
			Handler:       _User_GetSomeUserMsg_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "user.proto",
}
