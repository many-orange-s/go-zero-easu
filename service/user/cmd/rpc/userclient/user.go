// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package userclient

import (
	"context"

	"go-zero-easy/service/user/cmd/rpc/user"

	"github.com/tal-tech/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UserId  = user.UserId
	UserMsg = user.UserMsg

	User interface {
		GetUserMsg(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*UserMsg, error)
		GetSomeUserMsg(ctx context.Context, opts ...grpc.CallOption) (user.User_GetSomeUserMsgClient, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) GetUserMsg(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*UserMsg, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUserMsg(ctx, in, opts...)
}

func (m *defaultUser) GetSomeUserMsg(ctx context.Context, opts ...grpc.CallOption) (user.User_GetSomeUserMsgClient, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetSomeUserMsg(ctx, opts...)
}
